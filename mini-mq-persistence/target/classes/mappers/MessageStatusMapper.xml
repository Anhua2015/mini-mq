<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xcxcxcxcx.persistence.db.mybatis.mapper.MessageStatusMapper">

    <resultMap id="BaseResultMap" type="com.xcxcxcxcx.mini.api.spi.persistence.MessageStatusEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="mid" property="mid" jdbcType="BIGINT"/>
        <result column="consumerGroupId" property="consumerGroupId" jdbcType="VARCHAR"/>
        <result column="pulledTimes" property="pulledTimes" jdbcType="INTEGER"/>
        <result column="expired" property="expired" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, mid, consumerGroupId, pulledTimes, expired, status
    </sql>

    <insert id="batchInsert"
            parameterType="java.util.ArrayList">
        INSERT INTO message_status (mid, consumerGroupId, pulledTimes, expired, status)
        VALUES
        <foreach collection ="messageStatusEntities" item="messageStatus" separator =",">
            (#{messageStatus.mid,jdbcType=BIGINT},
            #{messageStatus.consumerGroupId,jdbcType=VARCHAR},
            1,
            #{messageStatus.expired,jdbcType=INTEGER},
            2)
        </foreach >
    </insert>

    <update id="batchUpdate"
            parameterType="java.util.ArrayList">
        UPDATE message_status
        <set>
            pulledTimes = pulledTimes + 1,status = 2
            <if test="expired != null">
                ,expired = #{expired}
            </if>
        </set>
        <where>
            <if test="ids != null">
                mid in
                <foreach collection="ids" item="mid" separator="," open="(" close=")">
                    #{mid,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="consumerGroupId != null">
                AND consumerGroupId = #{consumerGroupId}
            </if>
            AND (
            (
            status = 2
            AND expired <![CDATA[ < ]]> REPLACE(unix_timestamp(NOW(3)),'.','')
            <if test="maxPulledTimes != null">
                AND pulledTimes <![CDATA[ < ]]> #{maxPulledTimes}
            </if>
            )
            OR
            (
            status = 4
            <if test="maxPulledTimes != null">
                AND pulledTimes <![CDATA[ < ]]> #{maxPulledTimes}
            </if>
            )
            )
        </where>
    </update>

    <resultMap id="MessageResultMap" type="com.xcxcxcxcx.mini.api.connector.message.Message">
        <id column="mid" property="mid" jdbcType="BIGINT"/>
        <result column="topicId" property="topicId" jdbcType="VARCHAR"/>
        <result column="expired" property="expired" jdbcType="BIGINT"/>
        <result column="key" property="key" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryByIdsAndGroup"
            resultMap="MessageResultMap"
            resultType="java.util.ArrayList">
        SELECT m.mid, m.topicId, s.expired, m.key, s.status, m.content
        FROM message_status s LEFT JOIN message m ON s.mid = m.mid
        <where>
            <if test="ids != null">
                s.mid in
                <foreach collection="ids" item="mid" separator="," open="(" close=")">
                    #{mid,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="consumerGroupId != null">
                AND s.consumerGroupId = #{consumerGroupId}
            </if>
            <if test="status != null">
                AND s.status = #{status}
            </if>
        </where>
    </select>

    <select id="queryIdByIdsAndGroup"
            resultType="java.lang.Long">
        SELECT mid
        FROM message_status
        <where>
            <if test="ids != null">
                mid in
                <foreach collection="ids" item="mid" separator="," open="(" close=")">
                    #{mid,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="consumerGroupId != null">
                AND consumerGroupId = #{consumerGroupId}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <select id="queryAbsent"
            resultType="java.lang.Long">
      SELECT mid
      FROM message m
      <where>
          mid not in (SELECT mid FROM message_status
          WHERE consumerGroupId = #{consumerGroupId})
          <if test="topicId != null">
              AND m.topicId = #{topicId}
          </if>
          <if test="key != null">
              AND key = #{key}
          </if>
          AND status = 1
      </where>
        <if test="pageNum != null and pageSize != null and pageNum != 0 and pageSize != 0">
            <bind name="start" value="(pageNum-1)*pageSize"/>
            <bind name="end" value="pageNum*pageSize"/>
            limit #{start},#{end}
        </if>
    </select>

    <select id="queryNotAbsent"
            resultType="java.lang.Long">
      SELECT s.mid
      FROM message_status s LEFT JOIN message m on m.mid = s.mid
      <where>
          <if test="messageRejectIds != null">
              s.mid in
              <foreach collection="messageRejectIds" item="mid" separator="," open="(" close=")">
                  #{mid,jdbcType=BIGINT}
              </foreach>
          </if>
          <if test="topicId != null">
              AND m.topicId = #{topicId}
          </if>
          <if test="consumerGroupId != null">
              AND s.consumerGroupId = #{consumerGroupId}
          </if>
          <if test="key != null">
              AND m.key = #{key}
          </if>
          AND m.status = 1
      </where>
        <if test="pageNum != null and pageSize != null and pageNum != 0 and pageSize != 0">
            <bind name="start" value="(pageNum-1)*pageSize"/>
            <bind name="end" value="pageNum*pageSize"/>
            limit #{start},#{end}
        </if>
    </select>


    <!-- 批量确认pull -->
    <update id="batchAckPull"
            parameterType="java.util.ArrayList">
        UPDATE message_status
        <set>
            status = 3
        </set>
        <where>
            <if test="ids != null">
                mid in
                <foreach collection="ids" item="mid" separator="," open="(" close=")">
                    #{mid,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="consumerGroupId != null">
                AND consumerGroupId = #{consumerGroupId}
            </if>
            AND status = 2
        </where>
    </update>

    <!-- 批量拒绝pull -->
    <update id="batchRejectPull"
            parameterType="java.util.ArrayList">
        UPDATE message_status
        <set>
            status = 4
        </set>
        <where>
            <if test="ids != null">
                mid in
                <foreach collection="ids" item="mid" separator="," open="(" close=")">
                    #{mid,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="consumerGroupId != null">
                AND consumerGroupId = #{consumerGroupId}
            </if>
            AND status = 2
        </where>
    </update>

</mapper>